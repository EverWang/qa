# Sealos 部署配置 - 管理端
# 刷刷题项目管理端部署到Sealos平台
apiVersion: v1
kind: ConfigMap
metadata:
  name: admin-web-config
  namespace: default
data:
  VITE_API_BASE_URL: "https://shuashuati-server.cloud.sealos.io/api"
  VITE_SUPABASE_URL: "https://lvafyknbbxmcatbmzeij.supabase.co"
  VITE_SUPABASE_ANON_KEY: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Imx2YWZ5a25iYnhtY2F0Ym16ZWlqIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTM1OTk1OTksImV4cCI6MjA2OTE3NTU5OX0.U9nIK4Z_Dc-A_LxpSJdAWNX0YSo3h6x6lvNtVqfI6hk"

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: admin-web
  namespace: default
  labels:
    app: admin-web
    version: v1
spec:
  replicas: 2
  selector:
    matchLabels:
      app: admin-web
  template:
    metadata:
      labels:
        app: admin-web
    spec:
      containers:
      - name: admin-web
        image: nginx:alpine
        ports:
        - containerPort: 80
        volumeMounts:
        - name: admin-web-dist
          mountPath: /usr/share/nginx/html
        - name: nginx-config
          mountPath: /etc/nginx/conf.d
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"
        livenessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 5
      initContainers:
      - name: build-admin-web
        image: node:18-alpine
        workingDir: /app
        command:
        - sh
        - -c
        - |
          echo "开始构建管理端..."
          npm config set registry https://registry.npmmirror.com
          npm install
          npm run build
          cp -r dist/* /dist/
          echo "构建完成！"
        envFrom:
        - configMapRef:
            name: admin-web-config
        volumeMounts:
        - name: source-code
          mountPath: /app
        - name: admin-web-dist
          mountPath: /dist
      volumes:
      - name: source-code
        configMap:
          name: admin-web-source
      - name: admin-web-dist
        emptyDir: {}
      - name: nginx-config
        configMap:
          name: admin-web-nginx-config

---
apiVersion: v1
kind: Service
metadata:
  name: admin-web-service
  namespace: default
  labels:
    app: admin-web
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: 80
    protocol: TCP
    name: http
  selector:
    app: admin-web

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: admin-web-ingress
  namespace: default
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  tls:
  - hosts:
    - shuashuati-admin.cloud.sealos.io
    secretName: admin-web-tls
  rules:
  - host: shuashuati-admin.cloud.sealos.io
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: admin-web-service
            port:
              number: 80

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: admin-web-nginx-config
  namespace: default
data:
  default.conf: |
    server {
        listen 80;
        server_name localhost;
        root /usr/share/nginx/html;
        index index.html;
        
        # Gzip压缩
        gzip on;
        gzip_vary on;
        gzip_min_length 1024;
        gzip_types text/plain text/css text/xml text/javascript application/javascript application/xml+rss application/json;
        
        # 静态资源缓存
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
        }
        
        # SPA路由支持
        location / {
            try_files $uri $uri/ /index.html;
        }
        
        # 健康检查
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
    }