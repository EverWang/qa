version: '3.8'

services:
  # MySQL数据库服务
  mysql:
    image: mysql:8.0
    container_name: qaminiprogram_mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: 123456
      MYSQL_DATABASE: qaminiprogram
      MYSQL_USER: qaminiprogram
      MYSQL_PASSWORD: qaminiprogram123
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./server/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - qaminiprogram_network
    command: --default-authentication-plugin=mysql_native_password

  # Golang后端服务
  backend:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: qaminiprogram_backend
    restart: always
    environment:
      DB_HOST: mysql
      DB_PORT: 3306
      DB_USER: qaminiprogram
      DB_PASSWORD: qaminiprogram123
      DB_NAME: qaminiprogram
      JWT_SECRET: your_jwt_secret_key_here_change_in_production
      JWT_EXPIRE_HOURS: 24
      SERVER_PORT: 8080
      SERVER_MODE: release
      ALLOWED_ORIGINS: "*"
    ports:
      - "8080:8080"
    depends_on:
      - mysql
    networks:
      - qaminiprogram_network
    volumes:
      - ./server:/app

  # 小程序前端服务
  miniprogram:
    build:
      context: ./miniprogram
      dockerfile: Dockerfile
    container_name: qaminiprogram_miniprogram
    restart: always
    ports:
      - "3000:80"
    networks:
      - qaminiprogram_network
    depends_on:
      - backend

  # 管理端前端服务
  admin-web:
    build:
      context: ./admin-web
      dockerfile: Dockerfile
    container_name: qaminiprogram_admin
    restart: always
    ports:
      - "3001:80"
    networks:
      - qaminiprogram_network
    depends_on:
      - backend

  # Nginx反向代理
  nginx:
    image: nginx:alpine
    container_name: qaminiprogram_nginx
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/conf.d:/etc/nginx/conf.d
    depends_on:
      - backend
      - miniprogram
      - admin-web
    networks:
      - qaminiprogram_network

volumes:
  mysql_data:

networks:
  qaminiprogram_network:
    driver: bridge